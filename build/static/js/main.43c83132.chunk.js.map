{"version":3,"sources":["login.jsx","reviewModal.jsx","markerModal.jsx","mapComponent.jsx","topFive.jsx","userPage.jsx","registerModal.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","props","_handleUserName","event","console","log","setState","user","target","value","state","_handlePassword","pw","closeModal","modalIsOpen","_login","output","window","fetch","method","body","JSON","stringify","headers","then","resp","json","sendToBack","catch","err","className","onChange","this","type","name","id","onClick","Component","Geocode","setApiKey","customStyles","content","top","left","right","bottom","width","height","marginRight","transform","backgroundColor","color","ReviewModal","_handleAddress","e","address","_handleRestaurant","restaurant","_handleText","review","_handleSubmit","fromAddress","response","lat","results","geometry","location","lng","handleFetch","error","average","parseInt","CS","cleanliness","freshness","quality","speed","setReviews","confirmReview","modalIsClosed","afterOpenModal","bind","subtitle","style","Modal","setAppElement","isOpen","onAfterOpen","onRequestClose","contentLabel","ref","placeholder","min","max","React","MarkerModal","cs","classNam","mapStyles","MapComponent","handleMarkerModal","modal","currentReview","reviews","nextProps","google","zoom","initialCenter","map","position","maps","LatLng","GoogleApiWrapper","apiKey","TopFive","nums","number","key","UserPage","_createReview","_confirmReview","obj","_closeModal","_reviews","RegisterModal","_addUserName","userName","_addCity","city","_addProvOrState","provOrState","_addCountry","country","_addPassword","password","_confirmPassword","confirmed","register","email","file","App","_register","message","loggedIn","_sendName","_logout","_sendReview","fetchData","ok","data","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43c83132.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import RegisterModal from './registerModal.jsx'\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      pw: null,\n      modalIsOpen: false\n    }\n  }\n  _handleUserName = (event) => {\n        console.log('hit')\n        this.setState({\n          user: event.target.value\n        })\n        // console.log(this)\n      console.log(`${this.state.user}`)\n    \n   \n  }\n  _handlePassword = (event) => {\n    this.setState({\n      pw: event.target.value\n    })\n     \n      \n    \n  }\n  // _register = () => {\n  //  console.log('hit')\n  //   this.setState({ modalIsOpen: true });\n  // }\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  }\n  // _confirmRegistration = (obj) => {\n  //   console.log('login', obj)\n  //   this.props.user(obj);\n  // }\n  _login = () => {\n    let output = {\n      user: this.state.user,\n      pw: this.state.pw\n    }\n    window.fetch('session/create', {\n      method: 'POST',\n      body: JSON.stringify(\n        output\n      ),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(resp => resp.json())\n        .then((json) => {\n         this.props.sendToBack(output.user)\n        })\n      .catch(err => console.log(err))\n    console.log('hit')\n    this.props.user(output)\n    console.log()\n    }\n  componentDidMount() {\n    console.log('component did mount');\n    \n  }\n  render() {\n    console.log('login render')\n    return (\n    <div className=\"login-wrapper\">\n\n    <div className=\"login-div\">\n       <form>\n       <h2 className=\"input-header\">User Name:</h2>\n          <input className=\"login-input\" onChange={this._handleUserName} >\n        </input>\n            <h2 className=\"input-header\">Password:</h2>          \n          <input type=\"password\" name=\"pw\" className=\"login-input\" onChange={this._handlePassword}>\n          </input>\n         <div className=\"css-helper\">\n          <button id=\"login-button\" className=\"button\" onClick={this._login}>submit</button>\n         </div>\n       </form>\n      </div>\n    </div>\n    )\n    \n  }\n}\n// isOpen={this.state.modalIsOpen}\n// onAfterOpen={this.afterOpenModal}\n// onRequestClose={this.closeModal}\n\nexport default Login;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDSZy_muaB5hzAf8NYwyuM3JCj0AT2tH4s\");\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    width: \"58%\",\n    height: \"50%\",\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#2f2e2e',\n  color: 'white'\n  }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\n\nclass ReviewModal extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"$$$$$$$$$$$$\", props)\n    this.state = {\n      restaurant: null,\n      address: null,\n      review: null,\n      CS: 10,\n      cleanliness: 10,\n      freshness: 10,\n      quality: 10,\n      speed: 10\n    };\n\n    // this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  // openModal() {\n  //   // this.setState({ modalIsOpen: true });\n  // }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    // this.setState({ modalIsOpen: false });\n    this.props.modalIsClosed()\n\n  }\n  _handleAddress = (e) => {\n    this.setState({\n      address: e.target.value\n    })\n  }\n  _handleRestaurant = (e) => {\n    this.setState({\n      restaurant: e.target.value\n    })\n  }\n\n  _handleText = (e) => {\n    this.setState({\n      review: e.target.value\n    })\n  }\n\n\n\n\n  _handleSubmit = (e) => {\n    Geocode.fromAddress(`${this.state.address}, Toronto, ON, Canada`).then(\n      response => {\n          console.log(\"hit geocode\")\n         this.setState({\n          lat: response.results[0].geometry.location.lat,\n           lng: response.results[0].geometry.location.lng\n \n         })\n\n         this.handleFetch();\n      \n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n\n   handleFetch = () => {\n     let average = parseInt(this.state.CS) + parseInt(this.state.cleanliness) \n     + parseInt(this.state.freshness) + parseInt(this.state.quality) + parseInt(this.state.speed)\n     console.log(average) \n     average = average / 5\n     console.log(\"hit\", average) \n\n    let output = {\n      lat: this.state.lat,\n      lng: this.state.lng,\n      restaurant: this.state.restaurant,\n      review: this.state.review,\n      user: this.props.user,\n      CS: this.state.CS,\n      cleanliness: this.state.cleanliness,\n      freshness: this.state.freshness,\n      quality: this.state.quality,\n      speed: this.state.speed,\n      average: average\n\n    }\n    window.fetch('review/create', {\n      method: 'POST',\n      body: JSON.stringify(\n        output\n      ),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(resp => resp.json())\n      .then((json) => {\n\n        this.props.setReviews(json)\n      })\n      .catch(err => console.log(err))\n\n    this.props.confirmReview(output)\n    this.props.modalIsClosed();\n  }\n\n\n  componentWillMount() {\n    Modal.setAppElement('body')\n  }\n  render() {\n    return (\n      <div>\n\n        <Modal\n          isOpen={this.props.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"modal-head-wrap\">\n          <h2 className=\"modal-title\" ref={subtitle => this.subtitle = subtitle}>Write Review</h2>\n          <button className=\"close\" onClick={this.closeModal}>close</button>\n          </div>\n         \n          <form className=\"modal-form\">\n         \n            <input className=\"reg-input\" name=\"restaurant\" placeholder=\"restaurant\" onChange={this._handleRestaurant}/>\n            <input className=\"reg-input\" name=\"\" placeholder=\"Address\" onChange={this._handleAddress}/>\n           <div className=\"ranger\">\n              <label>Customer Service: {this.state.CS}</label>\n              <input className=\"reg-range\" name=\"Customer Service\" type=\"range\" min=\"0\" max=\"10\" onChange={(e) => { this.setState({ CS: e.target.value }) }}/>\n            </div>              \n              <div className=\"ranger\">\n            <label>Cleanliness: {this.state.cleanliness}</label>            \n            <input className=\"reg-range\" name=\"Cleanliness\" type=\"range\" min=\"0\" max=\"10\" onChange={(e) => { this.setState({cleanliness: e.target.value})}}/>\n            </div>\n            <div className=\"ranger\">\n            <label>Quality: {this.state.quality}</label>            \n              <input className=\"reg-range\" name=\"Quality\" type=\"range\" min=\"0\" max=\"10\" onChange={(e) => { this.setState({ quality: e.target.value }) }}/>\n            </div>\n            <div className=\"ranger\">\n            <label>Freshness: {this.state.freshness}</label>            \n              <input className=\"reg-range\" name=\"Freshness\" type=\"range\" min=\"0\" max=\"10\" onChange={(e) => { this.setState({ freshness: e.target.value }) }}/>\n            </div>\n            <div className=\"ranger\">\n            <label>Speed: {this.state.speed}</label>           \n              <input className=\"reg-range\" name=\"Speed\" type=\"range\" min=\"0\" max=\"10\" onChange={(e) => { this.setState({ speed: e.target.value }) }}/>\n           </div>\n            <textarea className=\"review-body\" placeholder=\"Review\" onChange={this._handleText}></textarea>\n            <button id=\"rev-submit\" className=\"button\" onClick={this._handleSubmit}>Submit</button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n\nexport default ReviewModal;","import React from 'react';\n/* global google */\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    width: \"58%\",\n    height: \"50%\",\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#2f2e2e',\n    color: 'white'\n  }\n};\n\nclass MarkerModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: null\n    };\n\n    \n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    // this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n\n    this.props.modalIsClosed()\n\n  }\n  componentWillMount() {\n    Modal.setAppElement('body')\n    \n  }\n\n \n  render() {\n     let average = this.props.review.cs + this.props.review.speed + this.props.review.quality + this.props.review.freshness + this.props.review.cleanliness \n    return (\n      <div>\n\n        <Modal\n          isOpen={this.props.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <button className=\"close\" onClick={this.closeModal}>close</button>\n          <h1 classNam=\"title\" ref={subtitle => this.subtitle = subtitle}>{this.props.review.restaurant}</h1>\n        <div>  \n            <label>Cleanliness: </label>\n            <span>{this.props.review.cleanliness} </span>\n            <label>Freshness: </label>\n            <span>{this.props.review.freshness} </span>\n            <label>Quality: </label>\n            <span>{this.props.review.quality} </span>\n            <label>Speed: </label>\n            <span>{this.props.review.speed} </span>\n            <label>Customer Service: </label>\n            <span>{this.props.review.cs} </span>\n            <label>average: </label>\n            <span>{this.props.review.average}</span>\n            {/* <p>{this.state.address}</p> */}\n          <p>{this.props.review.review}</p>\n        </div>\n          \n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MarkerModal;","/* global google */\nimport React, {\n  Component\n} from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport MarkerModal from './markerModal.jsx'\n// import SearchBar from './searchBar.jsx'\nconst mapStyles = {\n  width: '50%',\n  height: '50%',\n};\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reviews: [],\n      currentReview: null,\n      modal: false\n    }\n  }\n  handleMarkerModal = (review) => {\n      this.setState({ modal: false, currentReview: review });\n      \n      console.log(review)\n      this.setState({ modal: true });\n\n  }\n\n  componentDidMount() {\n    this.setState({\n      reviews: this.props.reviews\n      })\n      console.log(this.state.reviews)\n    }\n  componentWillReceiveProps(nextProps) {\n  this.setState({\n    reviews: nextProps.reviews\n  });\n}\n  render() {\n    return (\n     <div className=\"map-wrapper\">\n\n     <div className=\"map-div\">\n \n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{ lat: 43.651070, lng: -79.347015 }}\n        > \n        {this.state.reviews.map (review => {\n          return (<Marker position={new google.maps.LatLng(review.lat, review.lng)} onClick={this.handleMarkerModal.bind(this, review)}/> )\n        })\n      }\n        </Map>\n        </div>\n        {this.state.modal ? (\n          <MarkerModal\n          modalIsOpen={this.state.modal} modalIsClosed={() => {this.setState({modal: false})}} review={this.state.currentReview}/>\n          ) : (\n            <h1> </h1>\n            )}\n            </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey:'AIzaSyDSZy_muaB5hzAf8NYwyuM3JCj0AT2tH4s'\n})(MapComponent);\n\n\n/**\n *     {this.state.parks.map(park => {\n              return (<Marker className=\"markers\" Name={park.name} position={new google.maps.LatLng(park.lat, park.long)}\n                onClick={this.handleModal.bind(this, park)}\n                />)\n            })}\n *\n*/","import React, { Component } from 'react';\n\nclass TopFive extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reviews: props.reviews,\n      nums: [0,1,2,3,4]\n    }\n  }\n  componentDidMount() {\n    console.log(this.state.reviews)\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      reviews: nextProps.reviews\n    });\n  }\n  render() {\n    return (\n      <div className=\"top-five\">\n     <div id=\"title-holder-topfive\">\n     <h3>Top Five restaurants by average:</h3>\n      </div>\n      <div className=\"top-5-container\">\n\n       {this.state.nums.map(number => {\n         return (\n           <div key={number} className=\"top-five-buttons\">\n           <label>{this.state.reviews[number].restaurant}: </label>  \n           <span> {this.state.reviews[number].average} </span>\n          </div>\n           )\n          })\n          \n        }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TopFive;","import React, {  Component} from 'react';\nimport ReviewModal from './reviewModal.jsx'\nimport MapComponent from './mapComponent.jsx';\nimport TopFive from './topFive.jsx';\nclass UserPage extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"#################&&&&^&^&^\", props)\n    this.state = {\n      modalIsOpen: false,\n      reviews : this.props.reviews\n    }\n  }\n    _createReview = () => {\n      this.setState({\n        modalIsOpen: true\n      })\n\n\n    }\n    _confirmReview = (obj) => {\n      console.log('user page', obj)\n      this.props.sendToBack(obj);\n    }\n    _closeModal = () => {\n      console.log('clsoe modal')\n       this.setState({\n            modalIsOpen: false\n        })\n   }\n   _reviews = (reviews) => {\n     this.setState({\n       reviews: reviews\n     })\n     console.log(this.state.reviews)\n   } \nrender() {\n  \n  return (\n    <div className=\"user-page\">\n      <button onClick={this._createReview} id=\"create-review\" className=\"button\">Write New Review</button>\n     <MapComponent className=\"map\" reviews={this.state.reviews}/>\n      <ReviewModal modalIsOpen={this.state.modalIsOpen} modalIsClosed={this._closeModal}\n       confirmReview={this._confirmReview} user={this.props.user} setReviews={this._reviews}/>\n      <TopFive reviews={this.state.reviews} />\n    </div>\n  )\n}\n}\n\nexport default UserPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    width: \"58%\",\n    height: \"60%\",\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#2f2e2e',\n    color: 'white'\n  }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\n\nclass RegisterModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: null,\n      email: null,\n      password: null,\n      confirmed: null,\n      file: null,\n      city: null,\n      provOrState: null,\n      country: null\n    };\n\n    \n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n \n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    // this.setState({ modalIsOpen: false });\n    this.props.modalIsClosed()\n  \n  }\n  componentWillMount() {\n    Modal.setAppElement('body')\n  }\n\n  _addUserName = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      userName: e.target.value\n    })\n  }\n  _addCity = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      city: e.target.value\n    })\n  }\n  _addProvOrState = (e) => {\n    this.setState({\n      provOrState: e.target.value\n    })\n  }\n\n  _addCountry = (e) => {\n      console.log(e.target.value)\n      this.setState({\n        country: e.target.value\n      })\n    \n  }\n  _addPassword = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  _confirmPassword = (e) => {\n    console.log(e.target.value)\n    this.setState({\n       confirmed: e.target.value \n    })\n  }\n  _handleSubmit = (e) => {\n    let output = {\n      user: this.state.userName,\n      city: this.state.city,\n      provOrState: this.state.provOrState,\n      country: this.state.country,\n      password: this.state.password,\n      confirmed: this.state.confirmed,\n\n    }\n    window.fetch('/user/new', {\n      method: 'POST',\n      body: JSON.stringify(\n        output\n      ),\n      headers: { 'Content-Type': 'application/json' }\n    })\n    .then(resp => resp.json())\n      .then((json) => {\n       console.log(json)\n      })\n      .catch(err => console.log(err))\n    console.log(\"boop\", output)\n    this.props.register(output)\n    this.props.modalIsClosed()\n  }\n  render() {\n    return (\n      <div>\n        \n        <Modal\n          isOpen={this.props.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"modal-head-wrap\">\n            <h2 className=\"modal-title\" ref={subtitle => this.subtitle = subtitle}>Register</h2>\n            <button className=\"close\" onClick={this.closeModal}>close</button>\n          </div>\n          \n          <form className=\"modal-form\">\n            <input id=\"top\" className=\"reg-input\" placeholder=\"User Name\" onChange={this._addUserName}/>\n            <input className=\"reg-input\" placeholder=\"City\" onChange={this._addCity}/>\n            <input className=\"reg-input\" placeholder=\"Province or State\" onChange={this._addProvOrState}/>\n            <input className=\"reg-input\" placeholder=\"Country\" onChange={this._addCountry}/>\n            <input className=\"reg-input\" type=\"password\" placeholder=\"Password\" onChange={this._addPassword}/>\n            <input className=\"reg-input\" type=\"password\" placeholder=\"confirm Password\"onChange={this._confirmPassword}/>\n            <button id=\"reg-submit\" className=\"button\" onClick={this._handleSubmit}>submit</button>\n\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default RegisterModal;","import React, {\n  Component\n} from 'react';\nimport Login from './login.jsx';\nimport './App.css';\nimport UserPage from './userPage.jsx'\nimport RegisterModal from './registerModal.jsx'\nclass App extends Component {\n  constructor(props) {;\n    super(props)\n    this.state = {\n      loggedIn: false,\n      user: null,\n      reviews: null\n    };\n\n  }\n   _register = () => {\n     console.log('hit')\n     this.setState({\n       modalIsOpen: true\n     });\n   }\n   closeModal = () => {\n     this.setState({\n       modalIsOpen: false\n     });\n   }\n  user = (message) => {\n    console.log(\"app\", message);\n    this.setState({\n      loggedIn: true\n    })\n  } \n  // _writeReview = (e) => {\n  //   console.log('hit')\n  // }\n_sendName = (obj) => {\n  console.log(\"#######################\")\n  console.log(obj)\n  console.log()\n  this.setState({\n    user: obj\n  })\n}\n\n_logout = () => {\n  console.log(`${this.state.user}`)\n}\n_sendReview = (obj) => {\n  console.log(\"app\", obj);\n}\n fetchData = () => {\n   fetch('/reviews/index')\n     .then(response => {\n       if (response.ok) {\n         response.json().then(data => {\n           this.setState({\n             reviews: data\n           })\n         })\n\n       }\n     })\n     .catch(err => console.log('parsing failed', err))\n\n }\n componentDidMount() {\n\n    this.fetchData();\n  \n }\nrender() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"header-css-help\">\n         <h1 id=\"header-title\">Fast Food Guru</h1>\n    {\n      !this.state.loggedIn ? ( < button id = \"header-reg\"\n        className = \"button\"\n        onClick = {\n          this._register\n        } > <b id=\"button-text\">\n             register \n          </b>\n             </button>) : (<button id=\"header-reg\" className=\"button\" onClick={this._logout}>Log Out</button > )\n\n    } \n      </div>\n      </header>\n\n\n\n\n\n        <body className=\"App-body\">\n\n          { this.state.loggedIn ?\n           (<UserPage sendToBack={this._sendReview} user={this.state.user} reviews={this.state.reviews}/>) : ( <Login user={this.user} sendToBack={this._sendName}/> ) }\n        \n           <RegisterModal modalIsOpen={this.state.modalIsOpen} modalIsClosed={this.closeModal} register={this.user}/>\n           </body>\n      \n    \n  \n\n  \n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}